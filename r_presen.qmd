---
title: "How to analysis in R"
author: "Nozomi Niimi"
format:
  revealjs:
    smaller: true
---

## What is R?

* 統計に特化したプログラミング言語
* Ross Ihaka, Robert Gentlemanらによって1993年に開発
* ベースとなる言語がSだった為、Sの前に立つという意味で「R」を選んだらしい
* Rのみだと"すごい電卓"だけど、packageを入れることによって何でもできる

## Rの利点

* 完全に無料！
* 統計に特化している
    * 最新の統計解析手法が整っている
    * 統計解析が非常に楽になるような仕組みが整っている
* 30年間の歴史があり、packageの遺産が多い
    * 2021年時点で20000近く！

## Rの欠点

* 最初はとっつきにくい
* Packageの質にムラがある
    * CRANは動きは保証するけど、その中身は保証しない
* 後方互換を考えていない
    * Packageの動作がバージョンによって異なることがある

## Rの統計のコツ

* Rstudioを使う
* 基本はインターネットで情報を探す
    * 本だと情報が古くて動かないこともしばしば
* 極力、自動化して楽をする
    * 人間はコピー & ペーストだとミスをする
* 関数の名前の前には、必ず"package名::"をつける！
    * namespaceの衝突の回避

## 本日のお話

* 基本的な統計解析の流れ
* 各々でおすすめのパッケージ
* 最後に

## 基本的な解析の方法

```{mermaid}
flowchart LR
    A(Raw data) --> B(Prepare)
    B --> C(Make Table 1)
    C --> D{data analysis: \n  Logistic regression \n  survival analysis etc}
    D --> E[Make other tables]
    D --> F[Visualization]
```


## Raw data
* Dataの読み込み
* excelかreadxlが最も多い
* 基本は`tidyverse`の中のパッケージにおまかせ
    * SPSS, STATAファイルも`haven`で行ける
* guess_maxは基本大きい数字のほうが良い
    * NAが多いデータだとデータ型を間違えることがある

## Raw data 2
```{r}
# load packages
library(readr)
dat <- readr::read_csv("testdata.csv", guess_max = 418)
head(dat)
```

## Prepare 1. EDA

## Prepare 2. data cleaning
* 動きの基本は3つ
    * 列を選択する`select`
    * 新しい列を作る`mutate`
    * 行を選択する`filter`
* `base`の`subset()`や`data.tableの[]`を使えば上記は同時に出来る
    * 見やすさとの兼ね合い

## Make Table 1
* `tableone`や`gtsummary`、`finalfit` etc
    * 個人的には圧倒的に`tableone`がオススメ
* labelを付けると楽(おまけだが)
## data analysis
## Make other tables
## Visualization



